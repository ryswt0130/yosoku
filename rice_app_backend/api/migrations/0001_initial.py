# Generated by Django 5.2.1 on 2025-05-31 03:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProducerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('business_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address_latitude', models.DecimalField(blank=True, decimal_places=6, help_text="Latitude of the producer's base location", max_digits=9, null=True)),
                ('address_longitude', models.DecimalField(blank=True, decimal_places=6, help_text="Longitude of the producer's base location", max_digits=9, null=True)),
                ('delivery_radius_km', models.DecimalField(blank=True, decimal_places=2, help_text='Delivery radius in kilometers', max_digits=5, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_address_snapshot', models.TextField(help_text='Snapshot of the delivery address at the time of order')),
                ('total_price_yen', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_status', models.CharField(choices=[('pending_confirmation', 'Pending Confirmation'), ('confirmed_by_producer', 'Confirmed by Producer'), ('awaiting_payment', 'Awaiting Payment'), ('paid', 'Paid'), ('out_for_delivery', 'Out for Delivery'), ('delivered', 'Delivered'), ('completed', 'Completed'), ('cancelled_by_consumer', 'Cancelled by Consumer'), ('cancelled_by_producer', 'Cancelled by Producer')], default='pending_confirmation', max_length=30)),
                ('notes_by_consumer', models.TextField(blank=True, null=True)),
                ('notes_by_producer', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('producer_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders_received', to='api.producerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Name of the rice product, e.g., 'Niigata Koshihikari'", max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('rice_type', models.CharField(choices=[('hakumai', '白米 (Hakumai - White Rice)'), ('genmai', '玄米 (Genmai - Brown Rice)'), ('mochigome', 'もち米 (Mochigome - Glutinous Rice)'), ('koshihikari', 'コシヒカリ (Koshihikari)'), ('akitakomachi', 'あきたこまち (Akitakomachi)'), ('hitomebore', 'ひとめぼれ (Hitomebore)'), ('others', 'その他 (Others)')], default='hakumai', max_length=50)),
                ('quantity_kg', models.DecimalField(decimal_places=2, help_text='Amount of rice available in kilograms', max_digits=7)),
                ('price_yen_per_kg', models.DecimalField(decimal_places=2, help_text='Price in Yen per kilogram', max_digits=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_images/')),
                ('available', models.BooleanField(default=True, help_text='Is this product currently available for purchase?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('producer_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='api.producerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name_snapshot', models.CharField(help_text='Snapshot of product name at time of order', max_length=255)),
                ('quantity_kg', models.DecimalField(decimal_places=2, help_text='Quantity of this product in kilograms for this order item', max_digits=7)),
                ('price_yen_per_kg_snapshot', models.DecimalField(decimal_places=2, help_text='Price per kg at the time of order', max_digits=10)),
                ('total_price_yen', models.DecimalField(decimal_places=2, help_text='Total price for this order item (quantity * price_per_kg)', max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='api.order')),
                ('product', models.ForeignKey(help_text='Product linked to this item. Null if product deleted.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.product')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('producer', 'Producer'), ('consumer', 'Consumer')], max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='producerprofile',
            name='user_profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='producer_details', to='api.userprofile'),
        ),
        migrations.AddField(
            model_name='order',
            name='consumer_profile',
            field=models.ForeignKey(limit_choices_to={'role': 'consumer'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders_placed', to='api.userprofile'),
        ),
        migrations.CreateModel(
            name='DeliveryAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_line1', models.CharField(max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(max_length=100)),
                ('prefecture', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(default='Japan', max_length=50)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_addresses', to='api.userprofile')),
            ],
        ),
    ]
